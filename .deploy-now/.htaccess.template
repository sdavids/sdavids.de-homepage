ServerSignature Off

<LimitExcept GET HEAD OPTIONS>
  Deny from all
</LimitExcept>

<IfModule mod_mime.c>
  AddDefaultCharset utf-8

  AddCharset utf-8 .css \
    .js \
    .txt \
    .webmanifest \
    .xml

  <Files "traffic-advice">
    # https://developer.chrome.com/blog/private-prefetch-proxy/#traffic
    ForceType application/trafficadvice+json
  </Files>

  <Files "site.webmanifest">
    # https://w3c.github.io/manifest/#iana-considerations
    ForceType application/manifest+json
  </Files>
</IfModule>

<IfModule mod_autoindex.c>
  # https://developer.mozilla.org/en-US/docs/Learn/Server-side/Apache_Configuration_htaccess#directory_access
  Options -Indexes
</IfModule>

# block hidden files in root except .well-known/
<IfModule mod_rewrite.c>
  RewriteEngine on
  RedirectMatch 404 /\.(?!well-known\/)
</IfModule>

# block unknown user agent
<IfModule mod_rewrite.c>
  RewriteEngine on
  RewriteCond "%{HTTP_USER_AGENT}" "^(?:\s|-)*$"
  RewriteRule "^" "-" [NC,F,L]
</IfModule>

<IfModule mod_headers.c>
  Header unset ETag

  # https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html#strict-transport-security
  Header set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"

  # https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html#x-content-type-options
  Header set X-Content-Type-Options "nosniff"

  # https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html#cross-origin-resource-policy-corp
  Header set Cross-Origin-Resource-Policy "same-origin"

  # https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html#cross-origin-opener-policy-coop
  Header set Cross-Origin-Opener-Policy "same-origin"

  # https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html#cross-origin-embedder-policy-coep
  Header set Cross-Origin-Embedder-Policy "require-corp"

 <FilesMatch "\.html(\.br|\.gz)?$">
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
    Header set Content-Security-Policy "default-src 'none'; frame-ancestors 'none'; base-uri 'self'; script-src 'self'; img-src 'self'; style-src 'self'; manifest-src 'self'; trusted-types; require-trusted-types-for 'script'"

    # https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html#referrer-policy
    Header set Referrer-Policy "strict-origin-when-cross-origin"

    # https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html#x-frame-options
    Header set X-Frame-Options "DENY"

    # https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html#permissions-policy-formerly-feature-policy
    # https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html#floc-federated-learning-of-cohorts
    Header set Permissions-Policy "geolocation=(), camera=(), microphone=(), interest-cohort=()"
  </FilesMatch>
</IfModule>

FileETag None

# configure caching
<IfModule mod_headers.c>
  <FilesMatch "\.(ico|png|webmanifest)$">
    Header set Cache-Control "public, max-age=600, stale-while-revalidate=60"
  </FilesMatch>

  <FilesMatch "\.[0-9a-f]{7}\.(css(\.br|\.gz)?|js(\.br|\.gz)?|png|svg)$">
    Header set Cache-Control "public, max-age=31536000, immutable"
  </FilesMatch>

  <FilesMatch "robots\.txt$">
    Header set Cache-Control "private, no-store"
  </FilesMatch>

  <FilesMatch "sitemap\.xml(\.gz)?$">
    Header set Cache-Control "private, no-store"
  </FilesMatch>

  <FilesMatch "index\.html(\.br|\.gz)?$">
    Header set Cache-Control "public, max-age=600, stale-while-revalidate=60"
  </FilesMatch>
</IfModule>

# serve pre-compressed gzip and brotli files
<IfModule mod_headers.c>
  RewriteCond "%{HTTP:Accept-encoding}" "br"
  RewriteCond "%{REQUEST_FILENAME}.br" -s
  RewriteRule "^(.*)\.(css|html|js)$" "/$1.$2.br" [QSA]

  RewriteRule "\.css\.br$" "-" [T=text/css,E=no-brotli:1,E=no-gzip:1]
  RewriteRule "\.html\.br$" "-" [T=text/html,E=no-brotli:1,E=no-gzip:1]
  RewriteRule "\.js\.br$"  "-" [T=text/javascript,E=no-brotli:1,E=no-gzip:1]

  <FilesMatch "(\.css|\.html|\.js)\.br$">
    Header append Content-Encoding br
    Header append Vary Accept-Encoding
  </FilesMatch>

  RewriteCond "%{HTTP:Accept-encoding}" "gzip"
  RewriteCond "%{REQUEST_FILENAME}.gz" -s
  RewriteRule "^(.*)\.(css|html|js)$" "/$1.$2.gz" [QSA]

  RewriteRule "\.css\.gz$" "-" [T=text/css,E=no-brotli:1,E=no-gzip:1]
  RewriteRule "\.html\.gz$" "-" [T=text/html,E=no-brotli:1,E=no-gzip:1]
  RewriteRule "\.js\.gz$"  "-" [T=text/javascript,E=no-brotli:1,E=no-gzip:1]

  <FilesMatch "(\.css|\.html|\.js)\.gz$">
    Header append Content-Encoding gzip
    Header append Vary Accept-Encoding
  </FilesMatch>
</IfModule>

# on-demand gzip compression
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/html text/plain text/xml application/xml text/css text/javascript application/javascript application/manifest+json application/trafficadvice+json
</IfModule>
